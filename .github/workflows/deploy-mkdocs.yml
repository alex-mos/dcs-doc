name: Build DCS docs

on:
  push:
    branches: [ master, develop ]

jobs:
  build:
    env:
      DEPLOY_USER: gh-dcs-deploy
      DEPLOY_HOST: lordvesel.win
      RELEASE_DIR: /var/www/dcs-docs/${{ github.ref }}/releases/${{ github.run_number }}
      RELEASES_DIR: /var/www/dcs-docs/${{ github.ref }}/releases/
      CURRENT_DIR: /var/www/dcs-docs/${{ github.ref }}/current
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ru/requirements.txt

    - name: Build RU site
      run: |
        cd $GITHUB_WORKSPACE/ru
        mkdocs build
        ls -al

    - name: Build EN site
      run: |
        cd $GITHUB_WORKSPACE/en
        mkdocs build
        ls -al

    - name: Prepare environment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.DEPLOY_HOST }}
        username: ${{ env.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          [[ -d ${{env.RELEASE_DIR}}/ru ]] || mkdir -p ${{env.RELEASE_DIR}}/ru
          [[ -d ${{env.RELEASE_DIR}}/en ]] || mkdir -p ${{env.RELEASE_DIR}}/en

    - name: Upload RU
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
      with:
        src: ru/site/
        dest: ${{env.DEPLOY_USER}}@${{env.DEPLOY_HOST}}:${{env.RELEASE_DIR}}/ru/

    - name: Upload EN
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
      with:
        src: en/site/
        dest: ${{env.DEPLOY_USER}}@${{env.DEPLOY_HOST}}:${{env.RELEASE_DIR}}/en/

    - name: Switch release
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.DEPLOY_HOST}}
        username: ${{env.DEPLOY_USER}}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          ln -sfn ${{env.RELEASE_DIR}} ${{env.CURRENT_DIR}}
          for R in `ls ${{env.RELEASES_DIR}} | sort -n | head -n -3`
          do rm -rf ${{env.RELEASES_DIR}}/$R
          done
